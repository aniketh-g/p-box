//
// Generated by Bluespec Compiler, version 2024.01 (build ae2a2fc6)
//
// On Thu May 23 10:02:44 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTest(CLK,
	      RST_N);
  input  CLK;
  input  RST_N;

  // register tbstate
  reg [1 : 0] tbstate;
  wire [1 : 0] tbstate$D_IN;
  wire tbstate$EN;

  // rule scheduling signals
  wire CAN_FIRE_RL_idle, WILL_FIRE_RL_idle;

  // rule RL_idle
  assign CAN_FIRE_RL_idle = tbstate == 2'd0 ;
  assign WILL_FIRE_RL_idle = CAN_FIRE_RL_idle ;

  // register tbstate
  assign tbstate$D_IN = 2'd2 ;
  assign tbstate$EN = CAN_FIRE_RL_idle ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        tbstate <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (tbstate$EN) tbstate <= `BSV_ASSIGNMENT_DELAY tbstate$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    tbstate = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_idle)
	$display("ans = %b = %d = -%d", 8'd35, 8'd35, 8'd221);
  end
  // synopsys translate_on
endmodule  // mkTest

